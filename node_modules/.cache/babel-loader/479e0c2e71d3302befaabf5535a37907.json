{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/React Projects/react hardware website/src/components/imageslider.js\";\nimport React, { Component } from \"react\";\nimport Carousel from '@brainhubeu/react-carousel';\nimport '@brainhubeu/react-carousel/lib/style.css';\nexport default class ImageSlider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => this.setState({\n      value: e.target ? e.target.value : e\n    });\n\n    this.state = {\n      value: 0\n    };\n  } // we check if we got event from input (and it has target property) or just value from Carousel \n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.value,\n      onChange: this.onChange,\n      type: \"number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Carousel, {\n      viewportWidth: \"400px\",\n      cellPadding: 5,\n      arrows: true,\n      value: this.state.value,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }, this.props.data && this.props.data.slides ? this.props.data.slides.map((imageObject, index) => {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: imageObject.imgurl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 36\n        }\n      });\n    }) : \"loading\"));\n  }\n\n}","map":{"version":3,"sources":["/home/user/Documents/React Projects/react hardware website/src/components/imageslider.js"],"names":["React","Component","Carousel","ImageSlider","constructor","props","onChange","e","setState","value","target","state","render","data","slides","map","imageObject","index","imgurl"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAO,0CAAP;AAEA,eAAe,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAE/CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQnBC,QARmB,GAQRC,CAAC,IAAI,KAAKC,QAAL,CAAc;AAAEC,MAAAA,KAAK,EAAEF,CAAC,CAACG,MAAF,GAAWH,CAAC,CAACG,MAAF,CAASD,KAApB,GAA4BF;AAArC,KAAd,CARG;;AAEf,SAAKI,KAAL,GAAa;AACTF,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH,GAP8C,CAS/C;;;AAEAG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWF,KAAzB;AAAgC,MAAA,QAAQ,EAAE,KAAKH,QAA/C;AAAyD,MAAA,IAAI,EAAC,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,QAAD;AACI,MAAA,aAAa,EAAC,OADlB;AAEI,MAAA,WAAW,EAAE,CAFjB;AAGI,MAAA,MAAM,MAHV;AAII,MAAA,KAAK,EAAE,KAAKK,KAAL,CAAWF,KAJtB;AAKI,MAAA,QAAQ,EAAE,KAAKH,QALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOK,KAAKD,KAAL,CAAWQ,IAAX,IAAmB,KAAKR,KAAL,CAAWQ,IAAX,CAAgBC,MAAnC,GACK,KAAKT,KAAL,CAAWQ,IAAX,CAAgBC,MAAhB,CAAuBC,GAAvB,CAA2B,CAACC,WAAD,EAAcC,KAAd,KAAwB;AACjD,0BAAO;AAAK,QAAA,GAAG,EAAED,WAAW,CAACE,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFC,CADL,GAIK,SAXV,CAFJ,CADJ;AAkBH;;AA9B8C","sourcesContent":["import React, { Component } from \"react\";\nimport Carousel from '@brainhubeu/react-carousel';\nimport '@brainhubeu/react-carousel/lib/style.css';\n\nexport default class ImageSlider extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: 0,\n        };\n    }\n\n    // we check if we got event from input (and it has target property) or just value from Carousel \n    onChange = e => this.setState({ value: e.target ? e.target.value : e });\n    render() {\n        return (\n            <div>\n                <input value={this.state.value} onChange={this.onChange} type=\"number\" />\n                <Carousel\n                    viewportWidth=\"400px\" \n                    cellPadding={5}\n                    arrows\n                    value={this.state.value}\n                    onChange={this.onChange}\n                >\n                    {this.props.data && this.props.data.slides\n                        ? this.props.data.slides.map((imageObject, index) => {\n                            return <img src={imageObject.imgurl} />\n                        })\n                        : \"loading\"}\n                </Carousel>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}